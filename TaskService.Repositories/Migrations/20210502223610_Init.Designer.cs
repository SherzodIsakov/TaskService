// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskService.Repositories.Contexts;

namespace TaskService.Repositories.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20210502223610_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskService.Repositories.Entities.FindEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FindValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastSavedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TextTaskEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TextTaskEntityId");

                    b.ToTable("FindEntity");
                });

            modelBuilder.Entity("TaskService.Repositories.Entities.TaskTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastSavedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Scope")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Scope");

                    b.ToTable("TaskTypeEntity");
                });

            modelBuilder.Entity("TaskService.Repositories.Entities.TextTaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastSavedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastSavedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TaskTypeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskTypeEntityId");

                    b.ToTable("TextTaskEntities");
                });

            modelBuilder.Entity("TaskService.Repositories.Entities.FindEntity", b =>
                {
                    b.HasOne("TaskService.Repositories.Entities.TextTaskEntity", null)
                        .WithMany("FindEntities")
                        .HasForeignKey("TextTaskEntityId");
                });

            modelBuilder.Entity("TaskService.Repositories.Entities.TextTaskEntity", b =>
                {
                    b.HasOne("TaskService.Repositories.Entities.TaskTypeEntity", "TaskTypeEntity")
                        .WithMany()
                        .HasForeignKey("TaskTypeEntityId");

                    b.Navigation("TaskTypeEntity");
                });

            modelBuilder.Entity("TaskService.Repositories.Entities.TextTaskEntity", b =>
                {
                    b.Navigation("FindEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
